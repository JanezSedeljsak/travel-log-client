{"version":3,"sources":["api/index.js","redux/user.js","redux/index.js","containers/Forms/Login.js","containers/Forms/Register.js","containers/Forms/Trip.js","containers/Forms/Profile.js","containers/Trips.js","containers/Members.js","components/PaperPlane.js","assets/banner.jpg","containers/Public.js","components/Waves.js","components/Header.js","containers/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["_API_","getRequest","route","a","jwt","alt","axios","method","headers","url","response","status","data","loadTopDestinations","loadMostActiveuMembers","loadTopCountries","loadAvgTripsPerMonth","loadTrips","loadMembers","loadProfile","loadTripSuggestion","login","credentials","register","profileUpdate","id","deleteTrip","idx","SET_USER","LOG_OUT","SIGN_IN","REGISTER","PROFILE_UPDATE","PROFILE_UPDATE_COMPLETE","PROFILE_UPDATE_ERROR","REGISTER_COMPLETE","SET_LOGIN_ERROR","SET_REGISTER_ERROR","initialState","email","isLoggedIn","isFetching","userId","isAdmin","loginError","registerError","profileUpdateError","currentUser","state","action","type","payload","error","setUser","userObj","setLoginError","setRegisterError","user","dispatch","fetchLogin","token","actions","fetchRegister","fetchProfileUpdate","reponse","combineReducers","useSelector","useDispatch","useEffect","to","className","name","layout","onFinish","values","onFinishFailed","console","log","autoComplete","Item","label","rules","required","message","Password","htmlType","alert","isLoading","useState","profileData","setProfileData","fetchData","Object","keys","length","labelCol","span","wrapperCol","initialValues","Option","value","moment","Date","birthdate","format","disabled","createdAt","Search","Input","usrEmail","usrId","history","useHistory","addToast","useToasts","trips","setTrips","tripsForDisplay","setTripsForDisplay","viewAllTrips","setViewAllTrips","filterText","setFilterText","showDetailModal","setShowDetailModal","detailIndex","setDetailIndex","closeModal","getToastSettings","appearance","autoDismiss","autoDismissTimeout","updateVisibleTrips","filtrTxt","viewTrips","tmpTrips","filter","trip","containsFilterTxt","tripName","toLowerCase","includes","showTrip","userList","some","style","marginBottom","size","checked","onChange","val","placeholder","allowClear","onSearch","width","itemLayout","dataSource","renderItem","shape","onClick","openDetailmodal","icon","ExpandAltOutlined","createdBy","removeRecord","DeleteOutlined","push","openEdit","EditOutlined","Meta","avatar","src","title","description","destination","tripDate","fromNow","visible","onOk","onCancel","countryName","avgRating","member","fullName","detailModal","members","setMembers","membersForDisplay","setMembersForDisplay","topMembers","setTopMembers","topLocations","setTopLocations","Banner","PaperPlane","fullname","count","country","xmlns","viewBox","fill","fillOpacity","d","isAuth","menuItem","setMenuItem","showSuggestionModal","setShowSuggestionModal","tripSuggestions","setTripSuggestions","suggestions","common","left","auth","right","annyonymous","admin","Header","leftNav","rightNav","mode","selectedKeys","e","routeChange","key","map","v","marginLeft","buildNav","Waves","item","target","href","getChartOptions","responsive","plugins","legend","position","display","text","TopMembersChart","options","labels","datasets","x","backgroundColor","TopDestinationsChart","destinations","dest","TopVisitedCountriesChart","countries","TripsPerMonthChart","monthData","month","monthName","topCountries","setTopCountries","avgTripsPerMonth","setAvgTripsPerMonth","flex","gutter","App","location","useLocation","PrivateRoute","Component","component","rest","render","props","AdminRoute","path","Public","exact","pathname","Login","Register","Content","Trips","Members","TripForm","ProfileForm","Dashboard","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","persistState","rootElement","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3023c6b2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// if development mode use another separate server for api\r\nconst _API_ = 'https://travel-log.azurewebsites.net';\r\n\r\nconst getRequest = async (route, jwt = null, alt = []) => {\r\n    const response = await axios({\r\n        method: 'get',\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            ...(jwt ? {'Authorization': `Bearer ${jwt}`} : {})\r\n        },\r\n        url: `${_API_}/api/v1/${route}`,\r\n    });\r\n\r\n    return response.status === 200 ? response.data : alt;\r\n}\r\n\r\nexport async function loadTopDestinations() {\r\n    return await getRequest('stats/popular-destinations');\r\n}\r\n\r\nexport async function loadMostActiveuMembers() {\r\n    return await getRequest('stats/active-users');\r\n}\r\n\r\nexport async function loadTopCountries() {\r\n    return await getRequest('stats/top-countries');\r\n}\r\n\r\nexport async function loadAvgTripsPerMonth() {\r\n    return await getRequest('stats/avg-trips-month');\r\n}\r\n\r\nexport async function loadTrips() {\r\n    return await getRequest('trips');\r\n}\r\n\r\nexport async function loadMembers() {\r\n    return await getRequest('users');\r\n}\r\n\r\nexport async function loadMyTrips(jwt) {\r\n    return await getRequest('my-trips', jwt);\r\n}\r\n\r\nexport async function loadProfile(jwt) {\r\n    return await getRequest('my-profile', jwt);\r\n}\r\n\r\nexport async function loadTripSuggestion(jwt) {\r\n    return await getRequest('trip-suggestion', jwt);\r\n}\r\n\r\nexport async function login(credentials) {\r\n    const response = await axios({\r\n        method: 'post',\r\n        headers: {\"Access-Control-Allow-Origin\": \"*\"},\r\n        url: `${_API_}/api/v1/auth/login`,\r\n        data: credentials\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport async function register(credentials) {\r\n    const response = await axios({\r\n        method: 'post',\r\n        headers: {\"Access-Control-Allow-Origin\": \"*\"},\r\n        url: `${_API_}/api/v1/auth/register`,\r\n        data: credentials\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport async function profileUpdate(credentials, jwt) {\r\n    const response = await axios({\r\n        method: 'put',\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            ...(jwt ? {'Authorization': `Bearer ${jwt}`} : {})\r\n        },\r\n        url: `${_API_}/api/v1/user/${credentials.id}`,\r\n        data: credentials\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nexport async function deleteTrip(idx, jwt) {\r\n    const response = await axios({\r\n        method: 'delete',\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            ...(jwt ? {'Authorization': `Bearer ${jwt}`} : {})\r\n        },\r\n        url: `${_API_}/api/v1/trips/${idx}`\r\n    });\r\n\r\n    return response;\r\n}","import {\r\n    login as fetchLogin,\r\n    register as fetchRegister,\r\n    profileUpdate as fetchProfileUpdate\r\n} from '../api';\r\n\r\nconst SET_USER = 'redux/users/SET_USER'\r\nconst LOG_OUT = 'redux/users/LOG_OUT'\r\nconst SIGN_IN = 'redux/users/SIGN_IN'\r\nconst REGISTER = 'redux/users/REGISTER'\r\nconst PROFILE_UPDATE = 'redux/users/PROFILE_UPDATE'\r\nconst PROFILE_UPDATE_COMPLETE = 'redux/users/PROFILE_UPDATE_COMPLETE'\r\nconst PROFILE_UPDATE_ERROR = 'redux/users/PROFILE_UPDATE_ERROR'\r\nconst REGISTER_COMPLETE = 'redux/users/REGISTER_COMPLETE'\r\nconst SET_LOGIN_ERROR = 'redux/users/SET_LOGIN_ERROR'\r\nconst SET_REGISTER_ERROR = 'redux/users/SET_REGISTER_ERROR'\r\n\r\nconst initialState = {\r\n    email: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    jwt: null,\r\n    userId: null,\r\n    isAdmin: false,\r\n    loginError: null,\r\n    registerError: null,\r\n    profileUpdateError: null,\r\n}\r\n\r\nconst currentUser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                email: action.payload.email,\r\n                isLoggedIn: true,\r\n                isFetching: false,\r\n                jwt: action.payload.jwt,\r\n                isAdmin: action.payload.isAdmin,\r\n                userId: action.payload.userId,\r\n                loginError: null\r\n            }\r\n        case LOG_OUT:\r\n            return initialState\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                loginError: null\r\n            }\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                registerError: null\r\n            }\r\n        case REGISTER_COMPLETE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                registerError: null\r\n            }\r\n        case SET_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                loginError: action.payload.error\r\n            }\r\n        case SET_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                registerError: action.payload.error\r\n            }\r\n        case PROFILE_UPDATE:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                profileUpdateError: null\r\n            }\r\n        case PROFILE_UPDATE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                email: action.payload.email,\r\n                profileUpdateError: null\r\n            }\r\n        case PROFILE_UPDATE_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                profileUpdateError: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentUser\r\n\r\nconst setUser = userObj => {\r\n    return {\r\n        type: SET_USER,\r\n        payload: userObj\r\n    }\r\n}\r\n\r\nconst setLoginError = error => {\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nconst setRegisterError = error => {\r\n    return {\r\n        type: SET_REGISTER_ERROR,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nconst login = user => async dispatch => {\r\n    dispatch({ type: SIGN_IN });\r\n\r\n    try {\r\n        const response = await fetchLogin(user);\r\n        if (response) {\r\n            dispatch(setUser({\r\n                email: user.email,\r\n                jwt: response.data.token,\r\n                isAdmin: response.data.isAdmin,\r\n                userId: response.data.userId\r\n            }));\r\n        } else {\r\n            dispatch(setLoginError(\"Failed to login\"));\r\n        }\r\n    } catch (err) {\r\n        dispatch(setLoginError(\"Failed to login\"));\r\n    }\r\n}\r\n\r\nconst register = user => async dispatch => {\r\n    dispatch({ type: REGISTER });\r\n\r\n    try {\r\n        const response = await fetchRegister(user);\r\n        if (response) {\r\n            dispatch({ type: REGISTER_COMPLETE })\r\n            dispatch(login(user))\r\n        } else {\r\n            dispatch(setRegisterError(\"Failed to register\"));\r\n        }\r\n    } catch (err) {\r\n        dispatch(setRegisterError(\"Failed to register\"));\r\n    }\r\n}\r\n\r\nconst updatePorfile = (user, jwt) => async dispatch => {\r\n    dispatch({ type: PROFILE_UPDATE });\r\n\r\n    try {\r\n        const reponse = await fetchProfileUpdate(user, jwt);\r\n        if (reponse) {\r\n            dispatch({ type: PROFILE_UPDATE_COMPLETE, payload: { email: user.email } });\r\n        } else {\r\n            dispatch({ type: PROFILE_UPDATE_ERROR })\r\n        }\r\n    } catch (err) {\r\n        dispatch(setRegisterError(\"Failed to register\"));\r\n    }\r\n\r\n}\r\n\r\nconst logOut = () => {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setUser,\r\n    logOut,\r\n    login,\r\n    register,\r\n    setLoginError,\r\n    setRegisterError,\r\n    updatePorfile\r\n}\r\n","import user from './user'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport default combineReducers({\r\n    user\r\n})","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\r\nimport { actions } from '../../redux/user'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const isLoggedIn = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null);\r\n    const dispatch = useDispatch();\r\n\r\n    const loginFinish = values => {\r\n        dispatch(actions.login(values));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logOut()) //reset state and clear any errors\r\n    }, [dispatch])\r\n\r\n    if (isLoggedIn) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n        <div className=\"basic-form-container\">\r\n            <h1>Welcome back!</h1>\r\n            <Form\r\n                name=\"basic\"\r\n                layout=\"vertical\"\r\n                onFinish={loginFinish}\r\n                onFinishFailed={() => console.log(\"errr\")}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\r\nimport { actions } from '../../redux/user'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const isLoggedIn = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null);\r\n    const dispatch = useDispatch();\r\n\r\n    function registerFinish(values) {\r\n        dispatch(actions.register(values));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logOut()) //reset state and clear any errors\r\n    }, [dispatch]);\r\n\r\n    if (isLoggedIn) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n        <div className=\"basic-form-container\">\r\n            <h1>Register now!</h1>\r\n            <Form\r\n                name=\"basic\"\r\n                layout=\"vertical\"\r\n                onFinish={registerFinish}\r\n                onFinishFailed={() => alert(\"error in form\")}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Full name\"\r\n                    name=\"fullname\"\r\n                    rules={[{ required: true, message: 'Please input your full name!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password autoComplete=\"new-password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n        <div>trip form</div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { loadProfile } from '../../api';\r\nimport { actions } from '../../redux/user'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport { Form, Input, Button, Select } from 'antd';\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const jwt = useSelector(state => state.user.jwt);\r\n    const isLoading = useSelector(state => state.user.isFetching === true);\r\n    const [profileData, setProfileData] = useState({});\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        const profileData = await loadProfile(jwt);\r\n        setProfileData(profileData);\r\n    }\r\n\r\n    if (!Object.keys(profileData).length) {\r\n        return <></>;\r\n    }\r\n\r\n    function profileUpdateFinish(values) {\r\n        dispatch(actions.updatePorfile(values, jwt));\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            onFinish={profileUpdateFinish}\r\n            onFinishFailed={() => alert(\"error in form\")}\r\n            initialValues={profileData}\r\n        >\r\n            <Form.Item\r\n                label=\"Full name\"\r\n                name=\"fullname\"\r\n                rules={[{ required: true, message: 'Enter your full name' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[{ required: true, message: 'Enter your email' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Lang code\"\r\n                name=\"langCode\"\r\n            >\r\n                <Select>\r\n                    <Select.Option value=\"en\">EN</Select.Option>\r\n                    <Select.Option value=\"sl\">SL</Select.Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Birth date\" name=\"birthDate\">\r\n                <span>{moment(new Date(profileData.birthdate)).format(\"DD.MM.yyyy\")}</span>\r\n            </Form.Item>\r\n            <Form.Item label=\"Member since\" name=\"createdAt\" disabled>\r\n                <span>{moment(new Date(profileData.createdAt)).format(\"DD.MM.yyyy\")}</span>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"New password\"\r\n                name=\"password\"\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Old password\"\r\n                name=\"oldpassword\"\r\n                rules={[{ required: true, message: 'Enter old password to update profile!' }]}\r\n            >\r\n                <Input.Password autoComplete=\"new-password\" />\r\n            </Form.Item>\r\n            <Form.Item label=\" \">\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    {isLoading ? \"Loading...\" : \"Update profile\"}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { List, Avatar, Input, Button, Switch, Modal } from 'antd';\r\nimport { loadTrips, deleteTrip } from '../api';\r\nimport { ExpandAltOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default () => {\r\n    const jwt = useSelector(state => state.user.jwt);\r\n    const usrEmail = useSelector(state => state.user.email);\r\n    const usrId = useSelector(state => state.user.userId);\r\n    const isAdmin = useSelector(state => state.user.isAdmin);\r\n    const history = useHistory();\r\n    const { addToast } = useToasts();\r\n\r\n    const [trips, setTrips] = useState([]);\r\n    const [tripsForDisplay, setTripsForDisplay] = useState([]);\r\n    const [viewAllTrips, setViewAllTrips] = useState(true);\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [showDetailModal, setShowDetailModal] = useState(false);\r\n    const [detailIndex, setDetailIndex] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function closeModal() {\r\n        setShowDetailModal(false);\r\n        setDetailIndex(-1);\r\n    }\r\n\r\n    function getToastSettings(type) {\r\n        return {\r\n            appearance: type,\r\n            autoDismiss: true,\r\n            autoDismissTimeout: 2500\r\n        }\r\n    };\r\n\r\n    function detailModal() {\r\n        if (detailIndex === -1) return <></>;\r\n        const trip = tripsForDisplay[detailIndex];\r\n        return (\r\n            <Modal title=\"Trip details\" visible={showDetailModal} onOk={closeModal} onCancel={closeModal} width={'70vw'}>\r\n                <p>Name: <b>{trip.tripName}</b></p>\r\n                <p>Destination: <b>{trip.destination}</b></p>\r\n                <p>Country: <b>{trip.countryName}</b></p>\r\n                {trip.avgRating !== -1 && <p>Avg rating: <b>{trip.avgRating}</b></p>}\r\n                <p>Trip date: <b>{moment(trip.tripDate).format(\"DD.MM.yyyy\")}</b></p>\r\n\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={trip.userList}\r\n                    renderItem={member => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src=\"https://icons.veryicon.com/png/o/miscellaneous/two-color-icon-library/user-286.png\" />}\r\n                                title={member.fullName}\r\n                                description={member.email}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    function openDetailmodal(idx) {\r\n        setDetailIndex(idx);\r\n        setShowDetailModal(true);\r\n    }\r\n\r\n    async function fetchData() {\r\n        const trips = await loadTrips();\r\n        setTrips(trips);\r\n        setTripsForDisplay(trips);\r\n    }\r\n\r\n    function updateVisibleTrips(filtrTxt, viewTrips) {\r\n        const tmpTrips = trips.filter(trip => {\r\n            const containsFilterTxt = trip.tripName.toLowerCase().includes(filtrTxt.toLowerCase());\r\n            const showTrip = viewTrips || trip.userList.some(user => user.email === usrEmail);\r\n            return containsFilterTxt && showTrip;\r\n        });\r\n\r\n        setTripsForDisplay(tmpTrips);\r\n    }\r\n\r\n    function changeFilterText(val) {\r\n        setFilterText(val);\r\n        updateVisibleTrips(val, viewAllTrips);\r\n    }\r\n\r\n    function changeViewAllTrips(val) {\r\n        setViewAllTrips(val);\r\n        updateVisibleTrips(filterText, val);\r\n    }\r\n\r\n    function openEdit(idx) {\r\n        history.push(`/edit/trip/${idx}`);\r\n    }\r\n\r\n    async function removeRecord(idx, jwt) {\r\n        const response = await deleteTrip(idx, jwt);\r\n        if (response && response.data.status) {\r\n            addToast(`Succesfully deleted record!`, getToastSettings('success'));\r\n            fetchData();\r\n        } else {\r\n            addToast(`Failed to deleted record!`, getToastSettings('error'));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n            <div style={{ marginBottom: 10 }}>\r\n                <span>{\"Toggle all trips:  \"}</span>\r\n                <Switch size=\"small\" checked={viewAllTrips} onChange={changeViewAllTrips} />\r\n            </div>\r\n            <Search placeholder=\"Filter trips by title\" allowClear onSearch={changeFilterText} style={{ width: '100%' }} />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={tripsForDisplay}\r\n                renderItem={(trip, idx) => (\r\n                    <List.Item\r\n                        actions={[<>\r\n                            <Button type=\"primary\" shape=\"circle\" onClick={() => openDetailmodal(idx)} icon={<ExpandAltOutlined />} size=\"large\" />\r\n                            {(isAdmin || (usrId && usrId === trip.createdBy)) && (\r\n                                <>\r\n                                    <Button type=\"danger\" shape=\"circle\" onClick={() => removeRecord(trip.id, jwt)} icon={<DeleteOutlined />} size=\"large\" />\r\n                                    <Button shape=\"circle\" onClick={() => openEdit(idx)} icon={<EditOutlined />} size=\"large\" />\r\n                                </>\r\n                            )}\r\n                        </>]}\r\n                    >\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src=\"https://cdn-icons-png.flaticon.com/512/1452/1452378.png\" />}\r\n                            title={trip.tripName}\r\n                            description={`${trip.destination} - ${moment(trip.tripDate, \"YYYYMMDD\").fromNow()}`}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            {detailModal()}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { List, Avatar, Input, Button, Tooltip, Modal } from 'antd';\r\nimport { loadMembers } from '../api';\r\nimport { ExpandAltOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default () => {\r\n    const [members, setMembers] = useState([]);\r\n    const [membersForDisplay, setMembersForDisplay] = useState([]);\r\n    const [showDetailModal, setShowDetailModal] = useState(false);\r\n    const [detailIndex, setDetailIndex] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function closeModal() {\r\n        setShowDetailModal(false);\r\n        setDetailIndex(-1);\r\n    }\r\n\r\n    function detailModal() {\r\n        if (detailIndex == -1) return <></>;\r\n        const member = membersForDisplay[detailIndex];\r\n        return (\r\n            <Modal title=\"Member details\" visible={showDetailModal} onOk={closeModal} onCancel={closeModal} width={'70vw'}>\r\n                <p>Full name: <b>{member.fullName}</b></p>\r\n                <p>Email: <b>{member.email}</b></p>\r\n                <p>Birthdate: <b>{moment(member.birthdate).format(\"DD.MM.yyyy\")}</b></p>\r\n                <p>Joined: <b>{moment(member.createdAt).format(\"DD.MM.yyyy\")}</b></p>\r\n\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={member.trips}\r\n                    renderItem={trip => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src=\"https://cdn-icons-png.flaticon.com/512/1452/1452378.png\" />}\r\n                                title={trip.tripName}\r\n                                description={`${trip.destination} - ${moment(trip.tripDate, \"YYYYMMDD\").fromNow()}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    function openDetailmodal(idx) {\r\n        setDetailIndex(idx);\r\n        setShowDetailModal(true);\r\n    }\r\n\r\n    async function fetchData() {\r\n        const members = await loadMembers();\r\n        setMembers(members);\r\n        setMembersForDisplay(members)\r\n    }\r\n\r\n    function onSearch(value) {\r\n        setMembersForDisplay(members.filter(member => member.fullName.toLowerCase().includes(value.toLowerCase())));\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n            <Search placeholder=\"Filter members by name\" allowClear onSearch={onSearch} style={{ width: '100%' }} />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={membersForDisplay}\r\n                renderItem={(member, idx) => (\r\n                    <List.Item\r\n                        actions={[<Tooltip title=\"View detail\">\r\n                            <Button type=\"primary\" shape=\"circle\" onClick={() => openDetailmodal(idx)} icon={<ExpandAltOutlined />} size=\"large\" />\r\n                        </Tooltip>]}\r\n                    >\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src=\"https://icons.veryicon.com/png/o/miscellaneous/two-color-icon-library/user-286.png\" />}\r\n                            title={member.fullName}\r\n                            description={member.email}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            {detailModal()}\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"paperplane\">\r\n            <div className=\"plane\">\r\n                <div className=\"wingRight\"></div>\r\n                <div className=\"wingLeft\"></div>\r\n                <div className=\"bottom\"></div>\r\n                <div className=\"top\"></div>\r\n                <div className=\"middle\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/banner.facae160.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport PaperPlane from '../components/PaperPlane';\r\nimport Banner from './../assets/banner.jpg';\r\nimport { loadMostActiveuMembers, loadTopDestinations } from '../api';\r\nimport { Row, Col, List, Avatar } from 'antd';\r\n\r\nexport default () => {\r\n    const [topMembers, setTopMembers] = useState([]);\r\n    const [topLocations, setTopLocations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        setTopMembers(await loadMostActiveuMembers());\r\n        setTopLocations(await loadTopDestinations());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"landing\">\r\n                <img id=\"banner-img\" src={Banner} />\r\n                <PaperPlane />\r\n                <p>~ Pass on the beautiful memories you've made around the world ~</p>\r\n                <div id=\"landing-container\">\r\n                    <div id=\"landing-container-title\">\r\n                        <h1>Travel log</h1>\r\n                    </div>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <h1 className=\"blu-title\">Top members</h1>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={topMembers}\r\n                                renderItem={member => (\r\n                                    <List.Item>\r\n                                        <List.Item.Meta\r\n                                            avatar={<Avatar src=\"https://icons.veryicon.com/png/o/miscellaneous/two-color-icon-library/user-286.png\" />}\r\n                                            title={member.user.fullname}\r\n                                            description={`${member.user.email} - Trips: ${member.count}`}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <h1 className=\"blu-title\">Top locations</h1>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={topLocations}\r\n                                renderItem={destination => (\r\n                                    <List.Item>\r\n                                        <List.Item.Meta\r\n                                            avatar={<Avatar src=\"https://cdn-icons-png.flaticon.com/512/561/561726.png\" />}\r\n                                            title={destination.name}\r\n                                            description={`${destination.country} - Visited: ${destination.count}`}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => (\r\n    <svg id=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path fill=\"#3c71b6\" fillOpacity=\"1\" d=\"M0,160L60,149.3C120,139,240,117,360,117.3C480,117,600,139,720,149.3C840,160,960,160,1080,138.7C1200,117,1320,75,1380,53.3L1440,32L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"></path>\r\n    </svg>\r\n)\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadTripSuggestion } from \"../api\";\r\nimport { Modal, Menu, Layout, List, Avatar } from 'antd';\r\nimport { actions } from '../redux/user';\r\nimport Waves from \"./Waves\";\r\n\r\nexport default ({ isAuth, isAdmin }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [menuItem, setMenuItem] = useState('/');\r\n    const [showSuggestionModal, setShowSuggestionModal] = useState(false);\r\n    const [tripSuggestions, setTripSuggestions] = useState([]);\r\n\r\n    const jwt = useSelector(state => state.user.jwt);\r\n\r\n    function closeModal() {\r\n        setShowSuggestionModal(false);\r\n    }\r\n\r\n    async function routeChange(route) {\r\n        switch (route) {\r\n            case 'logout':\r\n                dispatch(actions.logOut());\r\n                return;\r\n            case 'get-suggestion':\r\n                const suggestions = await loadTripSuggestion(jwt);\r\n                setTripSuggestions(suggestions);\r\n                setShowSuggestionModal(true);\r\n                return;\r\n            default:\r\n                setMenuItem(route);\r\n                history.push(`/${route}`);\r\n                return;\r\n        }\r\n    }\r\n\r\n    const common = {\r\n        left: {\r\n            '': 'Home',\r\n            'trips': 'Recent trips',\r\n            'members': 'Members'\r\n        }\r\n    }\r\n\r\n    const auth = {\r\n        left: {\r\n            'create/trip': 'Add trip',\r\n            'get-suggestion': 'Get suggestion'\r\n        }, right: {\r\n            'profile': 'Profile',\r\n            'logout': 'Logout'\r\n        }\r\n    };\r\n\r\n    const annyonymous = {\r\n        right: {\r\n            'login': 'Login',\r\n            'register': 'Register'\r\n        }\r\n    };\r\n\r\n    const admin = {\r\n        left: {\r\n            'dashboard': 'Dashboard'\r\n        }\r\n    };\r\n\r\n    function buildNav() {\r\n        const leftNav = { ...(isAdmin ? admin.left : []), ...common.left, ...(isAuth ? auth.left : annyonymous.left) };\r\n        const rightNav = { ...(isAdmin ? admin.right : []), ...common.right, ...(isAuth ? auth.right : annyonymous.right) };\r\n\r\n        return (\r\n            <Menu mode=\"horizontal\" selectedKeys={menuItem} mode=\"horizontal\" onClick={(e) => routeChange(e.key)}>\r\n                {Object.keys(leftNav).map(v => (\r\n                    <Menu.Item key={v}>\r\n                        {leftNav[v]}\r\n                    </Menu.Item>\r\n                ))}\r\n\r\n                {Object.keys(rightNav).map((v, idx) =>\r\n                    (idx === 0) ?\r\n                        <Menu.Item key={v} style={{ marginLeft: 'auto' }}>\r\n                            {rightNav[v]}\r\n                        </Menu.Item>\r\n                        : <Menu.Item key={v}>\r\n                            {rightNav[v]}\r\n                        </Menu.Item>\r\n                )}\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout.Header>\r\n                {buildNav()}\r\n            </Layout.Header>\r\n            <Waves />\r\n            <Modal title=\"Destination suggestions\" visible={showSuggestionModal} onOk={closeModal} onCancel={closeModal}>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={tripSuggestions}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src=\"https://cdn-icons-png.flaticon.com/512/1452/1452378.png\" />}\r\n                                title={<a target=\"_blank\" href={`http://images.google.com/images?q=${item.name}`}>{item.name}</a>}\r\n                                description={item.country}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { loadMostActiveuMembers, loadTopDestinations, loadTopCountries, loadAvgTripsPerMonth } from '../api';\r\nimport { Bar, Chart } from 'react-chartjs-2';\r\nimport { Row, Col } from 'antd';\r\nimport 'chart.js/auto';\r\n\r\nconst getChartOptions = ({ title }) => ({\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: title,\r\n        },\r\n    },\r\n});\r\n\r\nfunction TopMembersChart({ members }) {\r\n    const options = getChartOptions({ title: 'Most active members' });\r\n    const data = {\r\n        labels: members.map(member => member.user.fullname),\r\n        datasets: [\r\n            {\r\n                label: 'Members by full name',\r\n                data: members.map(x => x.count),\r\n                backgroundColor: '#3f681c',\r\n            }\r\n        ],\r\n    };\r\n\r\n    return <Bar options={options} data={data} />;\r\n}\r\n\r\nfunction TopDestinationsChart({ destinations }) {\r\n    const options = getChartOptions({ title: 'Most visited destinations' });\r\n    const data = {\r\n        labels: destinations.map(dest => dest.name),\r\n        datasets: [\r\n            {\r\n                label: 'Destinations by name',\r\n                data: destinations.map(x => x.count),\r\n                backgroundColor: '#fb6542',\r\n            }\r\n        ],\r\n    };\r\n\r\n    return <Bar options={options} data={data} />;\r\n}\r\n\r\nfunction TopVisitedCountriesChart({ countries }) {\r\n    const options = getChartOptions({ title: 'Most visited countries' });\r\n    const data = {\r\n        labels: countries.map(dest => dest.countryName),\r\n        datasets: [\r\n            {\r\n                label: 'Countries by name',\r\n                data: countries.map(x => x.count),\r\n                backgroundColor: '#ffbb00',\r\n            }\r\n        ],\r\n    };\r\n\r\n    return <Bar options={options} data={data} />;\r\n}\r\n\r\nfunction TripsPerMonthChart({ monthData }) {\r\n    const data = {\r\n        labels: monthData.map(month => month.monthName),\r\n        datasets: [\r\n            {\r\n                label: 'Trips per month',\r\n                data: monthData.map(x => x.count),\r\n                backgroundColor: '#375e97',\r\n            }\r\n        ],\r\n    };\r\n\r\n    return <Chart type=\"line\" data={data} />;\r\n}\r\n\r\nexport default () => {\r\n    const [topMembers, setTopMembers] = useState([]);\r\n    const [topLocations, setTopLocations] = useState([]);\r\n    const [topCountries, setTopCountries] = useState([]);\r\n    const [avgTripsPerMonth, setAvgTripsPerMonth] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        setTopMembers(await loadMostActiveuMembers());\r\n        setTopLocations(await loadTopDestinations());\r\n        setTopCountries(await loadTopCountries());\r\n        setAvgTripsPerMonth(await loadAvgTripsPerMonth());\r\n    }\r\n\r\n    return (\r\n        <div style={{ flex: 1 }}>\r\n            <Row gutter={[16, 24]}>\r\n                <Col span={12} >\r\n                    <TopMembersChart members={topMembers} />\r\n                </Col>\r\n                <Col span={12} >\r\n                    <TopDestinationsChart destinations={topLocations} />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 24]}>\r\n                <Col span={12} >\r\n                    <TopVisitedCountriesChart countries={topCountries} />\r\n                </Col>\r\n                <Col span={12} >\r\n                    <TripsPerMonthChart monthData={avgTripsPerMonth} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom'\r\nimport Login from './containers/Forms/Login';\r\nimport Register from './containers/Forms/Register';\r\nimport TripForm from './containers/Forms/Trip';\r\nimport ProfileForm from './containers/Forms/Profile';\r\nimport Trips from './containers/Trips';\r\nimport Members from './containers/Members';\r\nimport Public from './containers/Public';\r\nimport Header from './components/Header';\r\nimport Dashboard from './containers/Dashboard';\r\nimport { Layout } from 'antd';\r\nimport './App.css';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function App() {\r\n  const isAuth = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null)\r\n  const isAdmin = useSelector(state => state.user.isAdmin === true);\r\n  const location = useLocation()\r\n\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      isAuth === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n    )} />\r\n  )\r\n\r\n  const AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      (isAuth && isAdmin)\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n    )} />\r\n  )\r\n\r\n  return (\r\n    <ToastProvider>\r\n      <Layout>\r\n        <Header isAuth={isAuth} isAdmin={isAdmin} />\r\n        <Switch>\r\n          <Route path='/' component={Public} exact />\r\n          {['/login', '/register'].includes(location.pathname) && <div id=\"container-with-background\">\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n          </div>}\r\n          <Layout.Content>\r\n            <Route path='/trips' component={Trips} />\r\n            <Route path=\"/members\" component={Members} />\r\n            <PrivateRoute path='/create/trip' component={TripForm} />\r\n            <PrivateRoute path='/edit/trip/:id' component={TripForm} />\r\n            <PrivateRoute path='/profile' component={ProfileForm} />\r\n            <AdminRoute path=\"/dashboard\" component={Dashboard} />\r\n          </Layout.Content>\r\n        </Switch>\r\n      </Layout>\r\n    </ToastProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport persistState from 'redux-localstorage'\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './redux'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            thunkMiddleware\r\n        ),\r\n        persistState(/*paths, config*/)\r\n    )\r\n)\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    rootElement\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}