{"version":3,"sources":["redux/user.js","redux/index.js","Containers/Forms/Login.js","Containers/Forms/Register.js","Containers/Forms/Trip.js","Containers/Forms/Profile.js","Containers/MyTrips.js","Containers/Destinations.js","Components/PaperPlane.js","assets/banner.jpg","Containers/Public.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["SET_USER","LOG_OUT","SIGN_IN","SIGN_UP","SIGN_UP_COMPLETE","SET_LOGIN_ERROR","SET_REGISTER_ERROR","initialState","profileName","isLoggedIn","isFetching","jwt","loginError","registerError","currentUser","state","action","type","payload","username","error","setUser","userObj","login","user","dispatch","a","axios","method","headers","url","data","email","password","response","token","actions","combineReducers","useSelector","useDispatch","useEffect","to","class","name","labelCol","span","wrapperCol","onFinish","values","onFinishFailed","console","log","autoComplete","Item","label","rules","required","message","Password","offset","htmlType","className","id","src","Banner","PaperPlane","isAuth","history","useHistory","useState","menuItem","setMenuItem","isAdmin","common","left","auth","right","annyonymous","admin","Header","leftNav","rightNav","mode","selectedKeys","e","route","alert","push","routeChange","key","Object","keys","map","v","idx","style","marginLeft","buildNav","App","PrivateRoute","Component","component","rest","render","props","Content","path","Public","exact","Login","Register","Descriptions","TripForm","ProfileForm","MyTrips","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","persistState","rootElement","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7552df67.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst SET_USER = 'redux/users/SET_USER'\r\nconst LOG_OUT = 'redux/users/LOG_OUT'\r\nconst SIGN_IN = 'redux/users/SIGN_IN'\r\nconst SIGN_UP = 'redux/users/SIGN_UP'\r\nconst SIGN_UP_COMPLETE = 'redux/users/SIGN_UP_COMPLETE'\r\nconst SET_LOGIN_ERROR = 'redux/users/SET_LOGIN_ERROR'\r\nconst SET_REGISTER_ERROR = 'redux/users/SET_REGISTER_ERROR'\r\n\r\nconst initialState = {\r\n    profileName: null,\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    jwt: null,\r\n    loginError: null,\r\n    registerError: null\r\n}\r\n\r\nconst currentUser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                profileName: action.payload.username,\r\n                isLoggedIn: true,\r\n                isFetching: false,\r\n                jwt: action.payload.jwt,\r\n                loginError: null\r\n            }\r\n        case LOG_OUT:\r\n            return initialState\r\n        case SIGN_IN:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                loginError: null\r\n            }\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                registerError: null\r\n            }\r\n        case SIGN_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                registerError: null\r\n            }\r\n        case SET_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                loginError: action.payload.error\r\n            }\r\n        case SET_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                registerError: action.payload.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentUser\r\n\r\nconst setUser = userObj => {\r\n    return {\r\n        type: SET_USER,\r\n        payload: userObj\r\n    }\r\n}\r\n\r\nconst setLoginError = error => {\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nconst setRegisterError = error => {\r\n    return {\r\n        type: SET_REGISTER_ERROR,\r\n        payload: { error }\r\n    }\r\n}\r\n\r\nconst login = user => async dispatch => {\r\n    dispatch({ type: SIGN_IN });\r\n\r\n    const response = await axios({\r\n        method: 'post',\r\n        headers: {\"Access-Control-Allow-Origin\": \"*\"},\r\n        url: 'http://localhost:5071/api/v1/auth/login ',\r\n        data: {\r\n            email: user.username,\r\n            password: user.password\r\n        }\r\n    });\r\n\r\n    if (response) {\r\n        dispatch(setUser({\r\n            username: user.email,\r\n            jwt: response.data.token\r\n        }))\r\n    }\r\n}\r\n\r\nconst register = user => async dispatch => {\r\n    dispatch({\r\n        type: SIGN_UP\r\n    });\r\n\r\n    const response = await axios({\r\n        method: 'post',\r\n        headers: {\"Access-Control-Allow-Origin\": \"*\"},\r\n        url: 'http://localhost:5071/api/v1/auth/login ',\r\n        data: {\r\n            email: user.username,\r\n            password: user.password\r\n        }\r\n    });\r\n\r\n    if (response) {\r\n        dispatch({type: SIGN_UP_COMPLETE})\r\n        dispatch(login(user))\r\n    }\r\n}\r\n\r\nconst getProfile = (access_token) => {\r\n    axios({\r\n        method: 'get',\r\n        url: 'http://localhost:3000/api/user/me ',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + access_token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(function (response) {\r\n            // handle success\r\n            console.log(response)\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error.response)\r\n\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        })\r\n}\r\n\r\nconst logOut = () => {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setUser,\r\n    logOut,\r\n    login,\r\n    register,\r\n    setLoginError,\r\n    setRegisterError,\r\n    getProfile\r\n}\r\n","import user from './user'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport default combineReducers({\r\n    user\r\n})","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\r\nimport { actions } from '../../redux/user'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const isLoggedIn = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null)\r\n    const loginError = useSelector(state => state.user.loginError)\r\n    const isLoginError = loginError ? true : false\r\n    const dispatch = useDispatch()\r\n\r\n    const loginFinish = values => {\r\n        dispatch(actions.login(values));\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logOut()) //reset state and clear any errors\r\n    }, [dispatch])\r\n\r\n    if (isLoggedIn) return <Redirect to=\"/Home\" />\r\n\r\n    return (\r\n        <div class=\"basic-form-container\">\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={loginFinish/*() => dispatch(actions.login(values))*/}\r\n                onFinishFailed={() => console.log(\"errr\")}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Link as RouterLink } from 'react-router-dom'\r\nimport { actions } from '../../redux/user'\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const isLoggedIn = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null);\r\n    const registerError = useSelector(state => state.user.registerError);\r\n    const isRegisterError = registerError ? true : false;\r\n    const dispatch = useDispatch();\r\n\r\n    function registerFinish(values) {\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logOut()) //reset state and clear any errors\r\n    }, [dispatch]);\r\n\r\n    if (isLoggedIn) return <Redirect to=\"/Home\" />\r\n\r\n    return (\r\n        <div class=\"basic-form-container\">\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                onFinish={registerFinish/*() => dispatch(actions.login(values))*/}\r\n                onFinishFailed={() => console.log(\"errr\")}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n        <div>trip form</div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n        <div>profile</div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>my trips</div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>destinations</div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"paperplane\">\r\n            <div className=\"plane\">\r\n                <div className=\"wingRight\"></div>\r\n                <div className=\"wingLeft\"></div>\r\n                <div className=\"bottom\"></div>\r\n                <div className=\"top\"></div>\r\n                <div className=\"middle\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/banner.facae160.jpg\";","import React from 'react';\r\nimport PaperPlane from '../Components/PaperPlane';\r\nimport Banner from './../assets/banner.jpg';\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <div id=\"landing\">\r\n                <img id=\"banner-img\" src={Banner} />\r\n                <h1>Welcome to Travel Log</h1>\r\n                <p>~ Pass on the beautiful memories you've made around the world ~</p>\r\n                <PaperPlane />\r\n                <div id=\"about-us\">\r\n                    <div id=\"about-us-title\">\r\n                        <h1>About us</h1>\r\n                    </div>\r\n                    <div id=\"about-us-content\">\r\n                        <p className=\"quote\">\r\n                            Ask this question to 50 different people, and you’ll likely get 50 different answers. The dictionary can’t even make up its mind; definitions include: “to go,” “to journey,” “to move in a given direction.” All of these certainly seem vaguely like travel. But, I’d hazard to say that travel is much more than just movement.\r\n                        </p>\r\n                        <p className=\"quote\">\r\n                            “To journey” would perhaps hone in on my definition of travel. It implies moving or going away from one place and ending in another, with some kind of meaningful experience in between. This is definitely the essence of travel. But travel is not that clear-cut.\r\n                        </p>\r\n                        <p className=\"quote\">\r\n                        There is not just one kind of journey. There are the sorts of journeys that have set itineraries and destinations — like a cruise, or guided tour, where the traveler is simply along for the ride. And then there are the sorts of journeys that lack a roadmap, or perhaps consist only loosely of destinations and plans. These sorts of journeys can change at any point along the road; they can adapt, and often force the traveler to adapt along with them.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport { Menu } from 'antd';\r\nimport { actions } from '../redux/user';\r\n\r\nexport default ({ isAuth }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [menuItem, setMenuItem]= useState('/');\r\n    const isAdmin = isAuth && false;\r\n\r\n    function routeChange(route) {\r\n        switch (route) {\r\n            case 'logout':\r\n                dispatch(actions.logOut());\r\n                return;\r\n            case 'get-suggestion':\r\n                alert(\"<<location suggestion popup>>\");\r\n                return;\r\n            default:\r\n                setMenuItem(route);\r\n                history.push(`/${route}`);\r\n                return;\r\n        }\r\n    }\r\n\r\n    const common = {\r\n        left: {\r\n            '': 'Home',\r\n            'popular-destinations': 'Popular destinations'\r\n        }\r\n    }\r\n\r\n    const auth = {\r\n        left: {\r\n            'my-trips': 'My trips',\r\n            'create/trip': 'Add trip',\r\n            'get-suggestion': 'Get suggestion'\r\n        }, right: {\r\n            'profile': 'Profile',\r\n            'logout': 'Logout'\r\n        }\r\n    };\r\n\r\n    const annyonymous = {\r\n        right: {\r\n            'login': 'Login',\r\n            'register': 'Register'\r\n        }\r\n    };\r\n\r\n    const admin = {\r\n        left: {\r\n\r\n        }\r\n    };\r\n\r\n    function buildNav() {\r\n        const leftNav = { ...common.left, ...(isAuth ? auth.left : annyonymous.left), ...(isAdmin ? admin.left : []) };\r\n        const rightNav = { ...common.right, ...(isAuth ? auth.right : annyonymous.right), ...(isAdmin ? admin.right : []) };\r\n\r\n        return (\r\n            <Menu mode=\"horizontal\" selectedKeys={menuItem} mode=\"horizontal\" onClick={(e) => routeChange(e.key)}>\r\n                {Object.keys(leftNav).map(v => (\r\n                    <Menu.Item key={v}>\r\n                        {leftNav[v]}\r\n                    </Menu.Item>\r\n                ))}\r\n\r\n                {Object.keys(rightNav).map((v, idx) =>\r\n                    (idx === 0) ?\r\n                        <Menu.Item key={v} style={{ marginLeft: 'auto' }}>\r\n                            {rightNav[v]}\r\n                        </Menu.Item>\r\n                        : <Menu.Item key={v}>\r\n                            {rightNav[v]}\r\n                        </Menu.Item>\r\n                )}\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout.Header>\r\n            {buildNav()}\r\n        </Layout.Header>\r\n    );\r\n};","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport Login from './Containers/Forms/Login';\r\nimport Register from './Containers/Forms/Register';\r\nimport TripForm from './Containers/Forms/Trip';\r\nimport ProfileForm from './Containers/Forms/Profile';\r\nimport MyTrips from './Containers/MyTrips';\r\nimport Descriptions from './Containers/Destinations';\r\nimport Public from './Containers/Public';\r\nimport Header from './Components/Header';\r\nimport { Layout } from 'antd';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const isAuth = useSelector(state => state.user.isLoggedIn && state.user.jwt !== null)\r\n\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      isAuth === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n    )} />\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <Header isAuth={isAuth} />\r\n      <Layout.Content>\r\n        <Switch>\r\n          <Route path='/' component={Public} exact />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/popular-destinations\" component={Descriptions} />\r\n          <PrivateRoute path='/create/trip' component={TripForm} />\r\n          <PrivateRoute path='/edit/trip/:id' component={TripForm} />\r\n          <PrivateRoute path='/profile' component={ProfileForm} />\r\n          <PrivateRoute path='/my-trips' component={MyTrips} />\r\n        </Switch>\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport persistState from 'redux-localstorage'\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './redux'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            thunkMiddleware\r\n        ),\r\n        persistState(/*paths, config*/)\r\n    )\r\n)\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    rootElement\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}